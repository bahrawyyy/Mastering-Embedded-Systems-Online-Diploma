
Diploma_GPIO_Task2_Button.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001a8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000408  00000000  00000000  000001fc  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000685  00000000  00000000  00000604  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include "util/delay.h"

#define F_CPU 16000000UL

int main()
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <main+0x6>
  72:	0f 92       	push	r0
  74:	cd b7       	in	r28, 0x3d	; 61
  76:	de b7       	in	r29, 0x3e	; 62
	// All port A as output
	DDRA = 0xff;
  78:	ea e3       	ldi	r30, 0x3A	; 58
  7a:	f0 e0       	ldi	r31, 0x00	; 0
  7c:	8f ef       	ldi	r24, 0xFF	; 255
  7e:	80 83       	st	Z, r24
	// PORTB 0 As input, internal pull up activated
	DDRB = 0x00;
  80:	e7 e3       	ldi	r30, 0x37	; 55
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	10 82       	st	Z, r1
	PORTB = 0x01;
  86:	e8 e3       	ldi	r30, 0x38	; 56
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	81 e0       	ldi	r24, 0x01	; 1
  8c:	80 83       	st	Z, r24
	// Flag to be used when switching between LEDs
	u8 flag = 0;
  8e:	19 82       	std	Y+1, r1	; 0x01

	while(1)
	{
		// Reading pin 0
		if(GET_BIT(PINB,0) == 0){
  90:	e6 e3       	ldi	r30, 0x36	; 54
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	80 81       	ld	r24, Z
  96:	88 2f       	mov	r24, r24
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	81 70       	andi	r24, 0x01	; 1
  9c:	90 70       	andi	r25, 0x00	; 0
  9e:	00 97       	sbiw	r24, 0x00	; 0
  a0:	61 f4       	brne	.+24     	; 0xba <main+0x4e>
			flag++;
  a2:	89 81       	ldd	r24, Y+1	; 0x01
  a4:	8f 5f       	subi	r24, 0xFF	; 255
  a6:	89 83       	std	Y+1, r24	; 0x01
			// Stay here until the user stop pressing
			while(GET_BIT(PINB,0) == 0);
  a8:	e6 e3       	ldi	r30, 0x36	; 54
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	80 81       	ld	r24, Z
  ae:	88 2f       	mov	r24, r24
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	81 70       	andi	r24, 0x01	; 1
  b4:	90 70       	andi	r25, 0x00	; 0
  b6:	00 97       	sbiw	r24, 0x00	; 0
  b8:	b9 f3       	breq	.-18     	; 0xa8 <main+0x3c>
		}

		switch(flag){
  ba:	89 81       	ldd	r24, Y+1	; 0x01
  bc:	28 2f       	mov	r18, r24
  be:	30 e0       	ldi	r19, 0x00	; 0
  c0:	3b 83       	std	Y+3, r19	; 0x03
  c2:	2a 83       	std	Y+2, r18	; 0x02
  c4:	8a 81       	ldd	r24, Y+2	; 0x02
  c6:	9b 81       	ldd	r25, Y+3	; 0x03
  c8:	84 30       	cpi	r24, 0x04	; 4
  ca:	91 05       	cpc	r25, r1
  cc:	09 f4       	brne	.+2      	; 0xd0 <main+0x64>
  ce:	42 c0       	rjmp	.+132    	; 0x154 <main+0xe8>
  d0:	2a 81       	ldd	r18, Y+2	; 0x02
  d2:	3b 81       	ldd	r19, Y+3	; 0x03
  d4:	25 30       	cpi	r18, 0x05	; 5
  d6:	31 05       	cpc	r19, r1
  d8:	84 f4       	brge	.+32     	; 0xfa <main+0x8e>
  da:	8a 81       	ldd	r24, Y+2	; 0x02
  dc:	9b 81       	ldd	r25, Y+3	; 0x03
  de:	82 30       	cpi	r24, 0x02	; 2
  e0:	91 05       	cpc	r25, r1
  e2:	41 f1       	breq	.+80     	; 0x134 <main+0xc8>
  e4:	2a 81       	ldd	r18, Y+2	; 0x02
  e6:	3b 81       	ldd	r19, Y+3	; 0x03
  e8:	23 30       	cpi	r18, 0x03	; 3
  ea:	31 05       	cpc	r19, r1
  ec:	5c f5       	brge	.+86     	; 0x144 <main+0xd8>
  ee:	8a 81       	ldd	r24, Y+2	; 0x02
  f0:	9b 81       	ldd	r25, Y+3	; 0x03
  f2:	81 30       	cpi	r24, 0x01	; 1
  f4:	91 05       	cpc	r25, r1
  f6:	b1 f0       	breq	.+44     	; 0x124 <main+0xb8>
  f8:	cb cf       	rjmp	.-106    	; 0x90 <main+0x24>
  fa:	2a 81       	ldd	r18, Y+2	; 0x02
  fc:	3b 81       	ldd	r19, Y+3	; 0x03
  fe:	26 30       	cpi	r18, 0x06	; 6
 100:	31 05       	cpc	r19, r1
 102:	c1 f1       	breq	.+112    	; 0x174 <main+0x108>
 104:	8a 81       	ldd	r24, Y+2	; 0x02
 106:	9b 81       	ldd	r25, Y+3	; 0x03
 108:	86 30       	cpi	r24, 0x06	; 6
 10a:	91 05       	cpc	r25, r1
 10c:	5c f1       	brlt	.+86     	; 0x164 <main+0xf8>
 10e:	2a 81       	ldd	r18, Y+2	; 0x02
 110:	3b 81       	ldd	r19, Y+3	; 0x03
 112:	27 30       	cpi	r18, 0x07	; 7
 114:	31 05       	cpc	r19, r1
 116:	b1 f1       	breq	.+108    	; 0x184 <main+0x118>
 118:	8a 81       	ldd	r24, Y+2	; 0x02
 11a:	9b 81       	ldd	r25, Y+3	; 0x03
 11c:	88 30       	cpi	r24, 0x08	; 8
 11e:	91 05       	cpc	r25, r1
 120:	c9 f1       	breq	.+114    	; 0x194 <main+0x128>
 122:	b6 cf       	rjmp	.-148    	; 0x90 <main+0x24>
		case 1:
			SET_BIT(PORTA,0);
 124:	ab e3       	ldi	r26, 0x3B	; 59
 126:	b0 e0       	ldi	r27, 0x00	; 0
 128:	eb e3       	ldi	r30, 0x3B	; 59
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	80 81       	ld	r24, Z
 12e:	81 60       	ori	r24, 0x01	; 1
 130:	8c 93       	st	X, r24
 132:	ae cf       	rjmp	.-164    	; 0x90 <main+0x24>
			break;
		case 2:
			SET_BIT(PORTA,1);
 134:	ab e3       	ldi	r26, 0x3B	; 59
 136:	b0 e0       	ldi	r27, 0x00	; 0
 138:	eb e3       	ldi	r30, 0x3B	; 59
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	80 81       	ld	r24, Z
 13e:	82 60       	ori	r24, 0x02	; 2
 140:	8c 93       	st	X, r24
 142:	a6 cf       	rjmp	.-180    	; 0x90 <main+0x24>
			break;
		case 3:
			SET_BIT(PORTA,2);
 144:	ab e3       	ldi	r26, 0x3B	; 59
 146:	b0 e0       	ldi	r27, 0x00	; 0
 148:	eb e3       	ldi	r30, 0x3B	; 59
 14a:	f0 e0       	ldi	r31, 0x00	; 0
 14c:	80 81       	ld	r24, Z
 14e:	84 60       	ori	r24, 0x04	; 4
 150:	8c 93       	st	X, r24
 152:	9e cf       	rjmp	.-196    	; 0x90 <main+0x24>
			break;
		case 4:
			SET_BIT(PORTA,3);
 154:	ab e3       	ldi	r26, 0x3B	; 59
 156:	b0 e0       	ldi	r27, 0x00	; 0
 158:	eb e3       	ldi	r30, 0x3B	; 59
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	88 60       	ori	r24, 0x08	; 8
 160:	8c 93       	st	X, r24
 162:	96 cf       	rjmp	.-212    	; 0x90 <main+0x24>
			break;
		case 5:
			SET_BIT(PORTA,4);
 164:	ab e3       	ldi	r26, 0x3B	; 59
 166:	b0 e0       	ldi	r27, 0x00	; 0
 168:	eb e3       	ldi	r30, 0x3B	; 59
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	80 81       	ld	r24, Z
 16e:	80 61       	ori	r24, 0x10	; 16
 170:	8c 93       	st	X, r24
 172:	8e cf       	rjmp	.-228    	; 0x90 <main+0x24>
			break;
		case 6:
			SET_BIT(PORTA,5);
 174:	ab e3       	ldi	r26, 0x3B	; 59
 176:	b0 e0       	ldi	r27, 0x00	; 0
 178:	eb e3       	ldi	r30, 0x3B	; 59
 17a:	f0 e0       	ldi	r31, 0x00	; 0
 17c:	80 81       	ld	r24, Z
 17e:	80 62       	ori	r24, 0x20	; 32
 180:	8c 93       	st	X, r24
 182:	86 cf       	rjmp	.-244    	; 0x90 <main+0x24>
			break;
		case 7:
			SET_BIT(PORTA,6);
 184:	ab e3       	ldi	r26, 0x3B	; 59
 186:	b0 e0       	ldi	r27, 0x00	; 0
 188:	eb e3       	ldi	r30, 0x3B	; 59
 18a:	f0 e0       	ldi	r31, 0x00	; 0
 18c:	80 81       	ld	r24, Z
 18e:	80 64       	ori	r24, 0x40	; 64
 190:	8c 93       	st	X, r24
 192:	7e cf       	rjmp	.-260    	; 0x90 <main+0x24>
			break;
		case 8:
			SET_BIT(PORTA,7);
 194:	ab e3       	ldi	r26, 0x3B	; 59
 196:	b0 e0       	ldi	r27, 0x00	; 0
 198:	eb e3       	ldi	r30, 0x3B	; 59
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	80 81       	ld	r24, Z
 19e:	80 68       	ori	r24, 0x80	; 128
 1a0:	8c 93       	st	X, r24
 1a2:	76 cf       	rjmp	.-276    	; 0x90 <main+0x24>

000001a4 <_exit>:
 1a4:	f8 94       	cli

000001a6 <__stop_program>:
 1a6:	ff cf       	rjmp	.-2      	; 0x1a6 <__stop_program>
